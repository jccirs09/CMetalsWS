@using CMetalsWS.Data
@using CMetalsWS.Services
@using MudBlazor

@inject DestinationRegionService DestinationRegionService
@inject DestinationGroupService DestinationGroupService

<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6">@((IsNew ? "New" : "Edit") + " Customer")</MudText>
    </TitleContent>
    <DialogContent>
        <MudForm Model="@Customer" @ref="_form" ValidationDelay="0">
            <MudGrid>
                <MudItem xs="12" sm="6">
                    <MudTextField @bind-Value="Customer.CustomerCode" Label="Customer Code" Required="true" ReadOnly="@(!IsNew)" />
                </MudItem>
                <MudItem xs="12" sm="6">
                    <MudTextField @bind-Value="Customer.CustomerName" Label="Customer Name" Required="true" />
                </MudItem>

                <MudItem xs="12">
                    <MudTextField @bind-Value="Customer.FullAddress" Label="Full Address" Lines="3" HelperText="This address will be used for geocoding." />
                </MudItem>

                <MudItem xs="12" sm="6">
                    <MudTimePicker Label="Receiving Hours Start" @bind-Time="Customer.ReceivingHourStart" />
                </MudItem>
                <MudItem xs="12" sm="6">
                    <MudTimePicker Label="Receiving Hours End" @bind-Time="Customer.ReceivingHourEnd" />
                </MudItem>

                <MudItem xs="12" sm="6">
                    <MudTextField @bind-Value="Customer.ContactNumber" Label="Contact Number" />
                </MudItem>
                <MudItem xs="12" sm="6">
                    <MudTextField @bind-Value="Customer.ContactName" Label="Contact Name" />
                </MudItem>
                <MudItem xs="12" sm="6">
                    <MudTextField @bind-Value="Customer.ContactEmail" Label="Contact Email" />
                </MudItem>

                <MudItem xs="12">
                    <MudDivider />
                </MudItem>

                <MudItem xs="12" sm="6">
                    <MudSelect T="int?" @bind-Value="Customer.DestinationRegionId" Label="Destination Region">
                        @foreach (var region in _regions)
                        {
                            <MudSelectItem T="int?" Value="@region.Id">@region.Name</MudSelectItem>
                        }
                    </MudSelect>
                </MudItem>
                <MudItem xs="12" sm="6">
                    <MudSelect T="int?" @bind-Value="Customer.DestinationGroupId" Label="Destination Group">
                        @foreach (var group in _groups)
                        {
                            <MudSelectItem T="int?" Value="@group.Id">@group.Name</MudSelectItem>
                        }
                    </MudSelect>
                </MudItem>

                <MudItem xs="12" sm="4">
                     <MudSelect @bind-Value="Customer.PreferredTruckType" Label="Preferred Truck">
                        @foreach (var tt in Enum.GetValues<PreferredTruckType>())
                        {
                            <MudSelectItem Value="@tt">@tt.ToString()</MudSelectItem>
                        }
                    </MudSelect>
                </MudItem>
                <MudItem xs="12" sm="4">
                     <MudSelect @bind-Value="Customer.Priority" Label="Priority">
                        @foreach (var p in Enum.GetValues<Priority>())
                        {
                            <MudSelectItem Value="@p">@p.ToString()</MudSelectItem>
                        }
                    </MudSelect>
                </MudItem>

                <MudItem xs="12">
                    <MudTextField @bind-Value="Customer.DeliveryNotes" Label="Delivery Notes" Lines="2" />
                </MudItem>
                <MudItem xs="12">
                    <MudTextField @bind-Value="Customer.AccessRestrictions" Label="Access Restrictions" Lines="2" />
                </MudItem>

                <MudItem xs="12">
                    <MudStack Row="true">
                        <MudCheckBox T="bool" @bind-Checked="Customer.AppointmentRequired" Label="Appointment Required" />
                    </MudStack>
                </MudItem>
            </MudGrid>
        </MudForm>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="Save">Save</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] IMudDialogInstance MudDialog { get; set; } = default!;
    [Parameter] public Customer Customer { get; set; } = default!;
    [Parameter] public bool IsNew { get; set; }

    private MudForm _form = default!;
    private List<DestinationRegion> _regions = new();
    private List<DestinationGroup> _groups = new();

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    private async Task LoadData()
    {
        _regions = await DestinationRegionService.GetDestinationRegionsAsync();
        _groups = await DestinationGroupService.GetDestinationGroupsAsync();
    }

    private void Cancel() => MudDialog.Cancel();

    private async Task Save()
    {
        await _form.Validate();
        if (_form.IsValid)
        {
            MudDialog.Close(DialogResult.Ok(Customer));
        }
    }
}
