@using CMetalsWS.Data
@using CMetalsWS.Services
@inject PickingListService PlService

<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6">Select Pending Picking List Items</MudText>
    </TitleContent>
    <DialogContent>
        @if (!_allItems.Any())
        {
            <MudText>No pending picking list items found for the required materials.</MudText>
        }
        else
        {
            <MudTable Items="@_allItems" T="PickingListItem" MultiSelection="true" @bind-SelectedItems="_selectedItems" Hover="true">
                <HeaderContent>
                    <MudTh>SO</MudTh>
                    <MudTh>Customer</MudTh>
                    <MudTh>Item ID</MudTh>
                    <MudTh>Qty</MudTh>
                    <MudTh>Unit</MudTh>
                    <MudTh>Width</MudTh>
                    @if (ShowLength)
                    {
                        <MudTh>Length</MudTh>
                    }
                    <MudTh>Weight</MudTh>
                </HeaderContent>
                <RowTemplate>
                    <MudTd DataLabel="SO">@context.PickingList.SalesOrderNumber</MudTd>
                    <MudTd DataLabel="Customer">@context.PickingList.CustomerName</MudTd>
                    <MudTd DataLabel="Item ID">@context.ItemId</MudTd>
                    <MudTd DataLabel="Qty">@context.Quantity</MudTd>
                    <MudTd DataLabel="Unit">@context.Unit</MudTd>
                    <MudTd DataLabel="Width">@context.Width</MudTd>
                    @if (ShowLength)
                    {
                        <MudTd DataLabel="Length">@context.Length</MudTd>
                    }
                    <MudTd DataLabel="Weight">@context.Weight</MudTd>
                </RowTemplate>
                <PagerContent>
                    <MudTablePager />
                </PagerContent>
            </MudTable>
        }
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="Submit">Select</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] IMudDialogInstance MudDialog { get; set; } = default!;
    [Parameter] public List<string> RequiredItemIds { get; set; } = new();
    [Parameter] public bool ShowLength { get; set; } = true;

    private List<PickingListItem> _allItems = new();
    private HashSet<PickingListItem> _selectedItems = new();

    protected override async Task OnInitializedAsync()
    {
        _allItems = await PlService.GetPendingItemsByItemIdsAsync(RequiredItemIds);
    }

    private void Submit() => MudDialog.Close(DialogResult.Ok(_selectedItems.ToList()));
    private void Cancel() => MudDialog.Cancel();
}
