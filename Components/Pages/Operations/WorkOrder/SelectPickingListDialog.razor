@using CMetalsWS.Data
@using CMetalsWS.Services
@inject PickingListService PlService

<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6">Select Pending Picking List Items</MudText>
    </TitleContent>
    <DialogContent>
        <MudTable Items="_items" T="PickingListItem" MultiSelection="true" @bind-SelectedItems="_selectedItems" Hover="true" Dense="true">
            <HeaderContent>
                <MudTh>SO #</MudTh>
                <MudTh>Customer</MudTh>
                <MudTh>Item ID</MudTh>
                <MudTh>Description</MudTh>
                <MudTh>Order Qty</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="SO #">@context.PickingList.SalesOrderNumber</MudTd>
                <MudTd DataLabel="Customer">@context.PickingList.CustomerName</MudTd>
                <MudTd DataLabel="Item ID">@context.ItemId</MudTd>
                <MudTd DataLabel="Description">@context.ItemDescription</MudTd>
                <MudTd DataLabel="Order Qty">@context.Quantity @context.Unit</MudTd>
            </RowTemplate>
            <NoRecordsContent>
                <MudText>No pending picking list items found for the required materials.</MudText>
            </NoRecordsContent>
        </MudTable>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="Submit">Select</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; } = default!;
    [Parameter] public List<string> RequiredItemIds { get; set; } = new();

    private List<PickingListItem> _items = new();
    private HashSet<PickingListItem> _selectedItems = new();

    protected override async Task OnInitializedAsync()
    {
        _items = await PlService.GetPendingItemsByItemIdsAsync(RequiredItemIds);
    }

    private void Submit() => MudDialog.Close(DialogResult.Ok(_selectedItems.ToList()));
    private void Cancel() => MudDialog.Cancel();
}
