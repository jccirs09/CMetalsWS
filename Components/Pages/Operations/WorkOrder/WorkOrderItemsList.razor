@using CMetalsWS.Data
@using MudBlazor

<MudPaper Outlined="true" Class="pa-4">
    <div class="d-flex justify-space-between align-center mb-2">
        <MudText Typo="Typo.h6">Work Order Line Items</MudText>
        <MudButton Variant="Variant.Outlined" OnClick="@OnAddStockItem" StartIcon="@Icons.Material.Filled.Add">Add Stock Item</MudButton>
    </div>
    @if (WorkOrderItems.Any())
    {
        <MudStack Spacing="2">
            @foreach (var item in WorkOrderItems)
            {
                <MudCard Outlined="true">
                    <MudCardContent>
                        <div class="d-flex justify-space-between">
                            <div>
                                <MudText Typo="Typo.caption">
                                    @if(item.IsStockItem)
                                    {
                                        <MudChip T="string" Size="Size.Small" Color="Color.Info">STOCK</MudChip>
                                    }
                                    else
                                    {
                                        @($"SO: {item.SalesOrderNumber}")
                                    }
                                </MudText>
                                <MudText><b>@item.CustomerName</b></MudText>
                                <MudText>@item.Description</MudText>
                                <MudText Typo="Typo.caption">Qty: @item.OrderQuantity?.ToString("N0") | Weight: @item.OrderWeight?.ToString("N0") lbs</MudText>
                            </div>
                            <div class="d-flex align-center">
                                <MudIconButton Icon="@Icons.Material.Filled.Delete" Size="Size.Small" OnClick="@(() => OnRemoveItem.InvokeAsync(item))" />
                            </div>
                        </div>
                    </MudCardContent>
                </MudCard>
            }
        </MudStack>
    }
    else
    {
        <MudText>Add items from the picking list to build the work order.</MudText>
    }
</MudPaper>

@code {
    [Parameter]
    public ICollection<WorkOrderItem> WorkOrderItems { get; set; } = new List<WorkOrderItem>();

    [Parameter]
    public EventCallback<WorkOrderItem> OnRemoveItem { get; set; }

    [Parameter]
    public EventCallback OnAddStockItem { get; set; }
}